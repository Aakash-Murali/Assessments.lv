# -*- coding: utf-8 -*-
"""LVADSUSR136_AAKASHMURALI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KwqoXa343l27QAZuHY8S9u7biElxkEb6

Aakash Murali 4344
"""

import numpy as np
import pandas as p

#1

lists=np.arange(10)
print("mean : ",np.mean(lists))
print("sum : ",np.sum(lists))
print("maximum : ",np.max(lists))
print("minimum : ",np.min(lists))
print("standard deviation : ",np.std(lists))

#2

from sklearn.preprocessing import StandardScaler

def normalize(health_data):
  normalized=StandardScaler().fit_transform(health_data)
  return normalized


health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
normalized = normalize(health_data)
print(normalized)

#3

records = {"Name":["Aakash","Murali","Swetha"],
          "English":[90,80,70],
          "Maths":[70,60,-1],
          "science":[99,100,82]}
df=p.DataFrame(records,index=["Record -1","Record -2","Record -3"])
avg_marks= np.average(records["English"])
print(df,"\n\n")
for i in range(len(records)-1):
  avg=0
  for j in range(1,4):
    if(int(df.iloc[i][j])!=-1):
      avg+=df.iloc[i][j]
  print("Average of ",df.iloc[i][0]," is ",avg/3)

#4

temp_today=np.random.randint(15,25,24)
print(temp_today)

#5

daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
avg_window_fluctuations=[]
avg=0
count=0
for i in range(daily_closing_prices.size):
  if(i%window_size==0 and i!=0  ):
    avg_window_fluctuations.append(avg/window_size)
    avg=0
    count=0
  avg+=daily_closing_prices[i]
  count+=1
if(avg!=0):
  avg_window_fluctuations.append(avg/count)
print(window_size," - day average fluctuations are : ",avg_window_fluctuations)

#6

samples=np.random.rand(100)
print(samples)

#7

import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
result=np.dot(properties_matrix,properties_matrix)
print(result)

#8

arr=np.array([[[1,2,3],[4,5,6]],[[2,3,5],[0,12,1]]])
print(arr)

#9

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df=p.DataFrame(data)
for i in range(df.size):
  for j in range(df.size):
    try:
      temp=df.iloc[i][j]
      if(int(temp)>45 and temp!="HR"):
        print(df.iloc[i]["Name"]," - ",df.iloc[i]["City"])
    except:
      True

#10
NA

#11
NA

#12
NA

#13

files=p.read_csv("/content/Q13_sports_team_stats.csv")
count=0
for i in files["TeamID"]:
  print(f"Average wins of team-{i} is ",(files.iloc[count][2])/(files.iloc[count][1]))
  count+=1

#14

files=p.read_csv("/content/Q14_customer_purchases.csv")
print(files)
print(str(files["LoyaltyProgramSignUp"]))

#15

files=p.read_csv("/content/Q15_student_grades.csv")
for i in range(files.size):
  try:
    print(files.iloc[i]["Math"])
  except:
    True
print(files)